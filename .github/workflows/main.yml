name: Test, Lint, and Format

on: [push, pull_request]

jobs:
  main:
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [Ubuntu, MacOS, Windows]
        python-version: [3.7, 3.8]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get full python version
        id: full-python-version
        shell: bash
        run: echo ::set-output name=version::$(python -c "import sys; print('.'.join(str(v) for v in sys.version_info))")

      - name: Install poetry
        shell: bash
        run: pip install poetry

      # By default poetry stores virtualenvs in different places on each major
      # system. This can be easily solved by storing the virtualenvs in the
      # project itself (`poetry config virtualenvs.in-project true`): however,
      # that poses the problem of all tools run against the repo including
      # everything in the virtualenv. So instead we just store in a common
      # location outside the repo to get the best of both worlds.
      - name: Use Common Poetry venv
        shell: bash
        run: poetry config cache-dir ~/venv

      - name: Set up cache
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        shell: bash
        run: poetry run pip --version >/dev/null 2>&1 || rm -rf ~/venv

      - name: Install dependencies
        shell: bash
        run: poetry install

      - name: Run pytest
        shell: bash
        run: poetry run pytest

      - name: Run flake8
        run: |
            # Stop the build if there are Python syntax errors or undefined names
            poetry run flake8 --count --select=E9,F63,F7,F82 --show-source --statistics .
            # Error on warnings because I'm strict
            poetry run flake8 --count --statistics .

      - name: Run black
        run: poetry run black  --check .
